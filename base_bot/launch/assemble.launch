<!--Just so you could Say ghettoBot Assemble!-->
<!--Order matters include this in the end of your launch files and anything you would want to run locally -->
<launch>
<!--Local Nodes Go Here-->
<machine name="rpi3" address="192.168.1.11" default="true"
 env-loader="/home/pi/ghettoBot/src/base_bot/scripts/init_env.sh" user="pi" password="123"/>
<!--Remote Nodes on rpi3 Go Here-->
<param name="nodemcu_ip" value="192.168.1.12" />  
  <node pkg="base_bot" type="cmd_vel2firmwareCurl.py" name="cmd_vel2curlNode" output="screen"/>

<arg name="camera_name_right" default="right" />
<arg name="camera_name_left" default="left" />
<!-- video_stream_provider can be a number as a video device or a url of a video stream -->
<arg name="video_stream_provider_right" default="0" />
<arg name="video_stream_provider_left" default="1" />
<!-- set camera fps to -->
<arg name="set_camera_fps" default="15" />
<!-- set buffer queue size of frame capturing to -->
<arg name="buffer_queue_size" default="0" />
<!-- frames per second to query the camera for -->
<arg name="fps" default="15" />
<!-- frame_id for the camera -->
<arg name="frame_id_right" default="$(arg camera_name_right)" />
<arg name="frame_id_left" default="$(arg camera_name_left)" />
<!-- By default, calibrations are stored to file://${ROS_HOME}/camera_info/${NAME}.yaml
To use your own fill this arg with the corresponding url, e.g.:
"file:///$(find your_camera_package)/config/your_camera.yaml" -->
<arg name="camera_info_url_right" default="file:///$(find base_bot)/info/right.yaml" />
<arg name="camera_info_url_left" default="file:///$(find base_bot)/info/right.yaml" />

<!-- flip the image horizontally (mirror it) -->
<arg name="flip_horizontal" default="false" />
<!-- flip the image vertically -->
<arg name="flip_vertical" default="false" />
<!-- force width and height, 0 means no forcing -->
<arg name="width" default="0"/>
<arg name="height" default="0"/>
<!-- enable looping playback, only if video_stream_provider is a video file -->
<arg name="loop_videofile" default="false" />
<arg name="start_frame" default="0"/>
<arg name="stop_frame" default="-1"/>
<!-- if show a image_view window subscribed to the generated stream -->
<arg name="visualize" default="false"/>

   <group ns="$(arg camera_name_right)">
	    <node pkg="video_stream_opencv" type="video_stream" name="$(arg camera_name_right)_stream" output="screen"> 
	    	<remap from="camera" to="image_raw" />
	    	<param name="camera_name" type="string" value="$(arg camera_name_right)" />
	        <param name="video_stream_provider" type="string" value="$(arg video_stream_provider_right)" />
	        <param name="set_camera_fps" type="double" value="$(arg set_camera_fps)" />
	        <param name="buffer_queue_size" type="int" value="$(arg buffer_queue_size)" />
	        <param name="fps" type="double" value="$(arg fps)" />
	        <param name="frame_id" type="string" value="$(arg frame_id_right)" />
	        <param name="camera_info_url" type="string" value="$(arg camera_info_url_right)" />
	        <param name="flip_horizontal" type="bool" value="$(arg flip_horizontal)" />
	        <param name="flip_vertical" type="bool" value="$(arg flip_vertical)" />
                <param name="loop_videofile" type="bool" value="$(arg loop_videofile)" />
                <param name="start_frame" type="int" value="$(arg start_frame)" />
                <param name="stop_frame" type="int" value="$(arg stop_frame)" />
	        <param name="width" type="int" value="$(arg width)" />
	        <param name="height" type="int" value="$(arg height)" />
	    </node>

	    <node if="$(arg visualize)" name="$(arg camera_name_right)_image_view" pkg="image_view" type="image_view">
	    	<remap from="image" to="image_raw" />
	    </node>
	</group>

    <group ns="$(arg camera_name_left)">
	    <node pkg="video_stream_opencv" type="video_stream" name="$(arg camera_name_left)_stream" output="screen"> 
	    	<remap from="camera" to="image_raw" />
	    	<param name="camera_name" type="string" value="$(arg camera_name_left)" />
	        <param name="video_stream_provider" type="string" value="$(arg video_stream_provider_left)" />
	        <param name="set_camera_fps" type="double" value="$(arg set_camera_fps)" />
	        <param name="buffer_queue_size" type="int" value="$(arg buffer_queue_size)" />
	        <param name="fps" type="double" value="$(arg fps)" />
	        <param name="frame_id" type="string" value="$(arg frame_id_left)" />
	        <param name="camera_info_url" type="string" value="$(arg camera_info_url_left)" />
	        <param name="flip_horizontal" type="bool" value="$(arg flip_horizontal)" />
	        <param name="flip_vertical" type="bool" value="$(arg flip_vertical)" />
                <param name="loop_videofile" type="bool" value="$(arg loop_videofile)" />
                <param name="start_frame" type="int" value="$(arg start_frame)" />
                <param name="stop_frame" type="int" value="$(arg stop_frame)" />
	        <param name="width" type="int" value="$(arg width)" />
	        <param name="height" type="int" value="$(arg height)" />
	    </node>

	    <node if="$(arg visualize)" name="$(arg camera_name_left)_image_view" pkg="image_view" type="image_view">
	    	<remap from="image" to="image_raw" />
	    </node>
	</group>
    
</launch>
